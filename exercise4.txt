ESSTHECHILDRENBYTHEFIRELOOKEDG

my solution does the following steps
1) loops through the key range
2)loops through the cipher, where the iterating variable starts at the value of the first iterator and incrementing by the key length
3)populates a double array for everything nth element (n is the key size, in this case 5)
4)runs a method that determines the most likely character for each char[] in the key
	4.1)loops through the double array msg[],loops through the frequency table,
	4.2)determines a fitness by calculating the character of the message plus the frequency, mod26 divided by the frequency
	4.3)checks if its the best solution (so far)
	4.4) if it is, assign it to the new best solution
	4.5) return the best solution when its found
	4.6) repeat for the rest of the characters in the key
----- if interested the characters found were 17 1 16 18 7 3 = [R, B, Q, S, H, D] (Where A = 0)
5) the key is attempted in the decrypt method that I used for the previous exercise
Please find attached the code called cipher3.java